{{- if .Values.producer.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "confluent-performance-suite.fullname" . }}-producer"
  labels:
    {{- include "confluent-performance-suite.labels" . | nindent 4 }}
spec:
  serviceName: "{{ include "confluent-performance-suite.fullname" . }}-producer"
  replicas: {{ .Values.producer.count }}
  selector:
    matchLabels:
      {{- include "confluent-performance-suite.selectorLabels" . | nindent 6 }}
      type: producer
  template:
    metadata:
      annotations:
        timestamp: {{ now | quote }}
      labels:
        {{- include "confluent-performance-suite.selectorLabels" . | nindent 8 }}
        type: producer
    spec:
      initContainers:
      - name: topics
        image: {{ .Values.producer.image }}
        command:
        - /bin/sh
        - -c
        - |
          kafka-topics \
            --if-not-exists \
            --topic {{ .Values.topic.name }}  \
            --create \
            --bootstrap-server {{ .Values.broker.url }} \
            --replication-factor {{ .Values.topic.replicationFactor }}  \
            --partitions {{ .Values.topic.partitions }}  \
            --command-config /mnt/kafka.properties
        volumeMounts:
        - name: kafka-properties
          mountPath: /mnt
      containers:
      - name: producer
        image: {{ .Values.producer.image }}
        command:
        - /bin/sh
        - -c
        - |
          kafka-producer-perf-test \
            --topic {{ .Values.topic.name }}  \
            --num-records {{ .Values.producer.recordsCount }} \
            --record-size {{ .Values.producer.recordSizeBytes }} \
            --throughput {{ .Values.producer.throughput }} \
            --producer-props acks={{ .Values.producer.acks }} client.id=$HOSTNAME  {{ .Values.producer.params }}\
            --producer.config /mnt/kafka.properties \
            --print-metrics > $HOSTNAME.log && \
          /opt/aws/s3.py $HOSTNAME.log && \
          sleep infinity
        imagePullPolicy: Always
        env:
        - name: ACCESS_KEY
          value: {{ .Values.s3.accessKey }}
        - name: SECRET_KEY
          value: {{ .Values.s3.secretKey }}
        - name: TEST_PREFIX
          value: {{ .Values.s3.testPrefix }}
        - name: BUCKET
          value: {{ .Values.s3.bucket }}
        - name: KAFKA_OPTS
          value: -javaagent:/usr/app/jmx_prometheus_javaagent-0.15.0.jar=7071:/usr/app/kafka_client.yml
        volumeMounts:
        - name: kafka-properties
          mountPath: /mnt
      volumes:
        - name: kafka-properties
          secret:
            secretName: "{{ include "confluent-performance-suite.fullname" . }}-kafka-client-config"
{{- end }}
